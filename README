# Zoppy CRUD - Clientes

Este projeto foi desenvolvido como parte de um desafio técnico com foco na stack usada pela empresa Zoppy. A proposta consiste em um sistema completo de cadastro de clientes com funcionalidades de criação, edição, remoção, listagem e busca. Inclui testes unitários, containerização com Docker e boas práticas de arquitetura e experiência do usuário.

---

## 🚀 Stack Tecnológica

- **Backend:** Node.js, NestJS 10, Sequelize ORM, MySQL  
- **Frontend:** Angular 19, TailwindCSS, RxJS  
- **Mensageria e Workers:** Estrutura BullMQ e Redis preparada (não usada nesse CRUD)  
- **Testes:** Jest (Cobertura superior a 80%)  
- **Containerização:** Docker & Docker Compose  

---

## 📄 Funcionalidades Implementadas

### CRUD de Clientes

- **Listagem paginada e com busca** por nome/email  
- **Criação de cliente** com dados:  
  - nome  
  - email  
  - telefone  
  - empresa  
  - CEP  
  - CNPJ  
- **Edição de cliente** com preenchimento automático do form  
- **Exclusão de cliente** com confirmação  

### Extras (Frontend)

- Estilização com **TailwindCSS**  
- Responsividade com abordagem **mobile first**  
- Filtro reativo com **debounce**  
- Componentes com controle de estado via **RxJS + Observables**  

### Extras (Backend)

- Testes unitários com Jest (>80% de cobertura)  
- Controle de paginação (`page` + `limit` via query params)  
- Filtro de busca por nome/email  
- Sequelize com MySQL e **migração automática**  
- Ambiente de execução isolado via Docker  

---

## ⚙️ Como rodar localmente (sem Docker)

### Banco de dados (Atenção: só via Docker)

> O banco de dados MySQL **não** está configurado para execução local. Utilize o ambiente Docker para isso.

### Backend (porta 3050)

```bash
cd backend
npm install
npm run start:dev
